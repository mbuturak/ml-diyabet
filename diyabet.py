# -*- coding: utf-8 -*-
"""Diyabet Teşhisi

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HOPWsl9e-rtT8hQRPxUxQhrCMAnzTDPD
"""

import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeClassifier, export_text
from sklearn.model_selection import train_test_split

diabets = pd.read_csv('sample_data/diabetes.csv');

#diabets.head(10)

y=diabets[['Outcome']]
x=diabets.drop(columns=['Outcome'],axis=1)

x_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.8,random_state=34)

feature_names = x.columns.tolist()

tree = DecisionTreeClassifier()
model = tree.fit(x_train, y_train)

# Modelin açıklanabilirliğini artırmak için ağacı metin biçiminde görüntüleyin
tree_rules = export_text(model, feature_names=feature_names)
#print("Decision Tree Rules:\n", tree_rules)

# Model skorunu hesaplayın
score = model.score(x_test, y_test)
print("Model Doğruluk Oranı:", score)

# Tahmin yapmak için örnek veri girişi.
# Kaç adet hamilelik geçirdi?, Glikoz, Kan Basıncı, Deri Kalınlığı, İnsülin direnci, Vücut kitle indeksi, Diyabet Soyağacı Fonksiyonu, Yaş

# 6 , 148 , 72 , 35 , 0 , 33.6 , 0.627 , 50 -> Diyabet hastası örneği
# 2, 135 , 85 , 26 , 0 , 25.6 , 0.124 , 23 -> Diyabet olmayan hasta örneği

new_data = np.array([[2,135,85,26,0,25.6,0.124,23]])
prediction = model.predict(new_data)
print("Tahmin Sonucu:", prediction)